(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{173:function(e,t,o){"use strict";o.d(t,"a",(function(){return p})),o.d(t,"b",(function(){return b}));var n=o(0),a=o.n(n);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=a.a.createContext({}),m=function(e){var t=a.a.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=m(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=m(o),u=n,b=p["".concat(r,".").concat(u)]||p[u]||d[u]||i;return o?a.a.createElement(b,s(s({ref:t},l),{},{components:o})):a.a.createElement(b,s({ref:t},l))}));function b(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,r=new Array(i);r[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var l=2;l<i;l++)r[l]=o[l];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},70:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return s})),o.d(t,"metadata",(function(){return c})),o.d(t,"rightToc",(function(){return l})),o.d(t,"default",(function(){return p}));var n=o(2),a=o(6),i=(o(0),o(173)),r=["components"],s={id:"ex4",title:"Exercise 4"},c={unversionedId:"exercises/ex4",id:"exercises/ex4",isDocsHomePage:!1,title:"Exercise 4",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, but if you cannot complete it in class you are encouraged to work at home to complete what you did not get through in class. Once finished, submit your work to Gradescope as a single zip file. The workflow of submitting an exercise is similar to that of homework assignments.",source:"@site/docs\\exercises\\ex4.md",slug:"/exercises/ex4",permalink:"/cs220-f22/docs/exercises/ex4",version:"current"},l=[{value:"Learning Objectives",id:"learning-objectives",children:[]},{value:"Part 1",id:"part-1",children:[]},{value:"Part 2",id:"part-2",children:[]}],m={rightToc:l};function p(e){var t=e.components,o=Object(a.a)(e,r);return Object(i.b)("wrapper",Object(n.a)({},m,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, but if you cannot complete it in class you are encouraged to work at home to complete what you did not get through in class. Once finished, submit your work to Gradescope as a single zip file. The workflow of submitting an exercise is similar to that of homework assignments."))),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If your prior programming background is not in Java or C++, this exercise may take you a little longer to complete."))),Object(i.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(i.b)("div",{className:"admonition admonition-success alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Objectives")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This exercise will help you practice your Unix/Linux and git commands, the text editor emacs (or vim), and will also introduce you to the basic data types, I/O statements, and simple control structures in C."))),Object(i.b)("h2",{id:"part-1"},"Part 1"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Log into your ugrad Linux account using Terminal/PuTTY depending on what computer you are using. Navigate (using cd) into the ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-f22-public")," repo you should have cloned already (see ",Object(i.b)("a",{parentName:"p",href:"ex3b"},"Exercise 3-B"),"). Do a git pull command to update your copy of the repo. You should now see an ex04 subdirectory if you do an ls exercises command.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Next go back to the enclosing directory (using cd .. command) and rename your private repository from 2022-fall-student-JHED to my220repo by typing mv 2022-fall-student-JHED my220repo, where JHED is your own unique JHED ID. This will make it easier to navigate to your private repo directory and makes your linux commands shorter. (Note that the repo name on github will not change.)")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Then, you need to copy the file ex04/gpa_simple.c file into your repo. You could do this a few different ways. Our suggestion is to go to your home directory first, assuming both the cs220-f22-public and your personal my220repo folders reside in your home directory. (If you made a subdirectory for this course, start there.) Try using tab completion as you type the cp command so that you do not have to type every single letter."))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ cd\n$ cp cs220-f22-public/exercises/ex04/gpa_simple.c my220repo\n$ cd my220repo # (copy of your personal repo created with Exercise 3-A, and then renamed)\n$ ls\n")),Object(i.b)("p",null,"Now you should see the ",Object(i.b)("inlineCode",{parentName:"p"},"gpa_simple.c")," file along with whatever else is in your repo."),Object(i.b)("p",null,"So right now, gpa_simple.c is at the top level of your personal repo (my220repo). But we would like your personal repo to have a little bit more structure, since you will be using it for all exercises and most homework this semester. So, we suggest that you make a subfolder named exercises, and another one inside exercises named ex04. We will then put gpa_simple.c there. First, let us confirm that you are still at the top of your personal repo. Do this by typing the pwd command and see what it reports. It should look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ pwd\n/home/YOUR_LOGIN/my220repo\n")),Object(i.b)("p",null,"If it does not look like that, then you will need to navigate to your my220repo. Now, from the top of your personal repo (i.e., inside my220repo folder), type:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ mkdir exercises\n$ cd exercises\n$ mkdir ex04\n$ cd ex04\n$ mv ../../gpa_simple.c .      # (note the space then dot at the end!)\n")),Object(i.b)("p",null,"This last command moves ",Object(i.b)("inlineCode",{parentName:"p"},"gpa_simple.c")," from two levels higher up, to the current folder (the ex04 subfolder you just created). Now it will not clutter up the top level of your repo."),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"A Tip for later")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"You may wish to make a similar structure for homework assignments: a homework folder with a subfolder named hw0. If you have not started working on hw0 yet, create that structure first. If you've already worked on hw0 in the top level my220repo folder and used git to add and commit the files, you'll want to use ",Object(i.b)("inlineCode",{parentName:"p"},"git mv <source> <destination>")," to rename them, then commit and push again. Feel free to ask for help in office hours or on Piazza."))),Object(i.b)("p",null,"Ultimately (after you create your structure for homework, specific instructions not covered here), your directory structure might look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-plain"},"/home/YOUR_LOGIN\n\u251c\u2500\u2500 /cs220-f22-public\n|   \u2514\u2500\u2500 exercises\n|       \u251c\u2500\u2500 ex02\n|       \u2502   \u2514\u2500\u2500 hello_world.c\n|       \u2514\u2500\u2500 ex04\n|           \u2514\u2500\u2500 gpa_simple.c\n\u2514\u2500\u2500 /my220repo\n    \u251c\u2500\u2500 exercises\n    \u2502   \u251c\u2500\u2500 ex02\n    \u2502   \u2502   \u2514\u2500\u2500 hello_world.c\n    \u2502   \u2514\u2500\u2500 ex04\n    \u2502       \u2514\u2500\u2500 gpa_simple.c\n    \u2514\u2500\u2500 homework \n        \u2514\u2500\u2500 hw0\n            \u251c\u2500\u2500 one.c\n            \u251c\u2500\u2500 two.c\n            \u2514\u2500\u2500 three.c\n")),Object(i.b)("h2",{id:"part-2"},"Part 2"),Object(i.b)("p",null,"Now, back to the exercise. Remember that you need to add files you want to track in your repo. Hopefully, you are still in subdirectory my220repo/exercises/ex04. If not return there, then execute:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ git pull       # (good habit every time you start to work)\n$ git add gpa_simple.c\n")),Object(i.b)("p",null,"Now you should enter an editor (emacs or vim) to read and edit this file. It contains a problem description, sample run, and pseudocode for writing a program to compute a GPA. Your job is to write the C code for it, applying all the basic concepts we have discussed in class. You will need char, int and float data types. You will need to read some input with scanf, and this can be tricky, so we have a link to a hint below (or ask for help). You will also need to create output with printf. Lastly, you will need some selection statements and a loop."),Object(i.b)("p",null,"Remember to save frequently, and also compile frequently. If you open a second shell window to log into the ugrad server, you can use one for editing, and one for compiling, rather than going in and out of the editor. Here is a reminder of our compile and execute commands:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ gcc -std=c99 -Wall -Wextra -pedantic gpa_simple.c\n$ ./a.out\n")),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you are coming from a Python background, you will be most comfortable using a while loop and if/else statements in C. However, this problem has a good set-up for a switch statement, so if you do not have time in class today, try to write the grade conversion to point values with a switch statement later for practice."))),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This FAQ will help you figure out some of the subtleties in scanning characters in c with respect to skipping newlines: ",Object(i.b)("a",{parentName:"p",href:"https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&id=1043284392"},"https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&id=1043284392")))),Object(i.b)("p",null,'try using " %c%f" rather than just "%c%f" as your scanf format string (note the space)!\n:::'),Object(i.b)("p",null,"Once you have a (partial) program that compiles and runs, you should remember to commit it to your repo to create that snapshot:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'$ git status   # (good habit, see if anything important needs to be `git add`ed for tracking)\n$ git add gpa_simple.c   # (you\'ll likely need to add this file now!)\n$ git commit -m "ex04 gpa working version"\n')),Object(i.b)("p",null,"You can then continue to work on the program development. Before you leave your work session, remember to commit one more time, and then push to synchronize with the remote repo:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'$ git commit -m "gpa done for now"\n$ git push\n')),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Reminder")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Remember to submit to Gradescope to check your program results (see Exercise 3-A for submission instructions - same as homework), and use exit to logout from your ugrad account when finished. If you continue to work on the program after class, make sure to keep your repo updated as well!"))))}p.isMDXComponent=!0}}]);