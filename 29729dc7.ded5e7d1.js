(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{160:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,r=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=o,m=u["".concat(r,".").concat(b)]||u[b]||d[b]||i;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var l=2;l<i;l++)r[l]=n[l];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var o=n(2),a=n(6),i=(n(0),n(160)),r=["components"],c={id:"ex5",title:"Exercise 5"},s={unversionedId:"exercises/ex5",id:"exercises/ex5",isDocsHomePage:!1,title:"Exercise 5",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, but if you cannot complete it in class you are encouraged to work at home to complete what you did not get through in class. Once finished, submit your work to Gradescope as a single zip file. The workflow of submitting an exercise is similar to that of a homework assignment.",source:"@site/docs\\exercises\\ex5.md",slug:"/exercises/ex5",permalink:"/cs220-f22/docs/exercises/ex5",version:"current"},l=[{value:"Learning Objectives",id:"learning-objectives",children:[]},{value:"Part 1",id:"part-1",children:[]},{value:"Part 2",id:"part-2",children:[]},{value:"Part 3",id:"part-3",children:[]},{value:"Part 5",id:"part-5",children:[]}],p={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,r);return Object(i.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, but if you cannot complete it in class you are encouraged to work at home to complete what you did not get through in class. Once finished, submit your work to Gradescope as a single zip file. The workflow of submitting an exercise is similar to that of a homework assignment."))),Object(i.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(i.b)("div",{className:"admonition admonition-success alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Objectives")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Reinforces the following concepts:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"Conditionals and loops"),Object(i.b)("li",{parentName:"ul"},"Arrays and strings"),Object(i.b)("li",{parentName:"ul"},"Characters and ASCII table"),Object(i.b)("li",{parentName:"ul"},"Compound assignment / increment"),Object(i.b)("li",{parentName:"ul"},"emacs, git, gcc, zip")))),Object(i.b)("h2",{id:"part-1"},"Part 1"),Object(i.b)("p",null,"Log into an undergraduate cluster computer. Confirm that your personal working git repository and the public course git repository are both cloned. Specifically, your home directory should have:"),Object(i.b)("p",null,"A subdirectory named my220repo, cloned from your personal private github repo."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Remember in the previous exercise, we renamed the ugrad copy of your private repo from 2022-fall-student-JHED to my220repo for brevity."),Object(i.b)("p",{parentName:"div"},"Another subdirectory cs220-f22-public, cloned from the public, coursewide repo."),Object(i.b)("p",{parentName:"div"},"If this is not the case, ask for assistance. You may need to redo steps from earlier exercises."))),Object(i.b)("h2",{id:"part-2"},"Part 2"),Object(i.b)("p",null,"Type cd cs220-f22-public to navigate into your working copy of the remote, coursewide public repo."),Object(i.b)("p",null,"Type ",Object(i.b)("inlineCode",{parentName:"p"},"git status"),' and confirm you have not modified any files or accidentally committed to the public repo. That is, you should not see any files categorized as "Changes to be committed", "Changes not staged for commit" or "Untracked." You should also not see the message "Your branch is ahead of \'origin/master\' by X commit(s)." If you do, please speak with an instructor or CA for a fix.'),Object(i.b)("p",null,"Type ",Object(i.b)("inlineCode",{parentName:"p"},"git pull")," to synchronize your local repo and working copy with the remote repo."),Object(i.b)("p",null,"Confirm that you can see the template (a.k.a. starter) files for today\u2019s exercise by typing ",Object(i.b)("inlineCode",{parentName:"p"},"ls exercises/ex05")," -- you should see three ",Object(i.b)("inlineCode",{parentName:"p"},".c")," source files listed."),Object(i.b)("h2",{id:"part-3"},"Part 3"),Object(i.b)("p",null,"We created a .bashrc unix shell file that contains several alias and environment settings that will make your ugrad server lives better. Along with this, we have a .bash_profile configuration file which will get the .bashrc settings into place when you log in remotely. While you are still in the cs220-f22-public directory, type ls -a to see this (hidden) file, along with the usual suspects (i.e., exercises folder)."),Object(i.b)("p",null,"Assuming you do not already have a customized .bashrc file in your home directory (ask for help if you already have one!), type ",Object(i.b)("inlineCode",{parentName:"p"},"cp .bashrc ~")," to copy our version of the file to your home directory. Next, type ",Object(i.b)("inlineCode",{parentName:"p"},"cp .bash_profile ~")," to copy the other file to your home directory. Then type ",Object(i.b)("inlineCode",{parentName:"p"},"source ~/.bashrc")," to run it. Normally this configuration file will automatically run every time you log into a ugrad unix server, but for now we want it to take effect in this session."),Object(i.b)("p",null,"Type ",Object(i.b)("inlineCode",{parentName:"p"},"cat ~/.bashrc")," to see the contents of that file. It sets your default EDITOR to be emacs (feel free to change it to vim if you prefer, then re-type the source command above), and it defines two aliases we can use as shortcuts when compiling our programs. The first one, ",Object(i.b)("inlineCode",{parentName:"p"},"gccc")," (note the extra 'c'!) is our standard gcc command with all the required flags already included. To use it, just type ",Object(i.b)("inlineCode",{parentName:"p"},"gccc myfile.c")," to compile a file. The lines beginning with a hashtag are comments in this unix shell scripting language. The second alias will be useful when we start using C++."),Object(i.b)("p",null,"Part 4\nUse ",Object(i.b)("inlineCode",{parentName:"p"},"cd ~/my220repo")," to move to your working copy of your personal repo. Type git pull to sync any updates you may have made from another copy."),Object(i.b)("p",null,"Use cd exercises to move to your personal exercises folder. (If you have not made one yet, type ",Object(i.b)("inlineCode",{parentName:"p"},"mkdir exercises")," first.)"),Object(i.b)("p",null,"Make a new directory for today\u2019s exercise by typing ",Object(i.b)("inlineCode",{parentName:"p"},"mkdir ex05"),"."),Object(i.b)("p",null,"Change to the new directory with ",Object(i.b)("inlineCode",{parentName:"p"},"cd ex05"),"."),Object(i.b)("p",null,"Copy the three template source files to the current directory using: ",Object(i.b)("inlineCode",{parentName:"p"},"cp ~/cs220-f22-public/exercises/ex05/*.c")," . (Don't forget the space-then-dot at the end of the line above! Also, remember to insert any subdirectories you may have created into the path above.)"),Object(i.b)("h2",{id:"part-5"},"Part 5"),Object(i.b)("p",null,"The three files that you just copied to your ",Object(i.b)("inlineCode",{parentName:"p"},"~/cs220/ex05")," directory are named ",Object(i.b)("inlineCode",{parentName:"p"},"count1.c"),", ",Object(i.b)("inlineCode",{parentName:"p"},"count2.c")," and ",Object(i.b)("inlineCode",{parentName:"p"},"count3.c"),". Each of the files is an incomplete program that you must complete and test yourself. Starting with ",Object(i.b)("inlineCode",{parentName:"p"},"count1.c"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Open the file for editing using ",Object(i.b)("inlineCode",{parentName:"p"},"emacs count1.c")," or ",Object(i.b)("inlineCode",{parentName:"p"},"vim count1.c"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Read the source code and the comments. Your instructions are in the comments!")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Modify the source files and test by:"),Object(i.b)("p",{parentName:"li"},"  Compiling with ",Object(i.b)("inlineCode",{parentName:"p"},"gcc -Wall -Wextra -std=c99 -pedantic count1.c -o count1")," (or by simply typing ",Object(i.b)("inlineCode",{parentName:"p"},"gccc count1.c -o count1")," to use your new alias!) The extra ",Object(i.b)("inlineCode",{parentName:"p"},"-o count1")," portion at the end of the line is asking for the executable created by gcc to be named count1 instead of the usual a.out.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Running with ",Object(i.b)("inlineCode",{parentName:"p"},"./count1"),"."))),Object(i.b)("p",null,"Once you have a (partial) program that compiles and runs, you should remember to commit it to your repo to create that snapshot, and push before exiting this session:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'$ git status   # (good habit, see if anything important needs to be `git add`ed for tracking)\n$ git add count1.c   # (you\'ll likely need to add this file now!)\n$ git commit -m "ex05 count1 working version"\n$ git push  # (when ready to update remote repo)\n')),Object(i.b)("p",null,"Do the above steps for the other two files: ",Object(i.b)("inlineCode",{parentName:"p"},"count2.c")," and ",Object(i.b)("inlineCode",{parentName:"p"},"count3.c"),". We don't expect you to complete them all during class time, but they are excellent practice for understanding basic C syntax, working with characters and arrays, and coding common algorithms."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Reminder")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Remember to add and commit to your local repo copy as your work. Push to your remote repo when finished. Also submit to Gradescope to check your program results and use exit to logout from your ugrad account when finished. If you continue to work on the program after class, make sure to keep your repo updated as well!"))))}u.isMDXComponent=!0}}]);