(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{169:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(n),b=i,u=p["".concat(r,".").concat(b)]||p[b]||m[b]||o;return n?a.a.createElement(u,c(c({ref:t},l),{},{components:n})):a.a.createElement(u,c({ref:t},l))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var l=2;l<o;l++)r[l]=n[l];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var i=n(2),a=n(6),o=(n(0),n(169)),r=["components"],c={id:"ex16",title:"Exercise 16"},s={unversionedId:"exercises/ex16",id:"exercises/ex16",isDocsHomePage:!1,title:"Exercise 16",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and submit on Gradescope to check your solution. You are encouraged to work at home to complete what you do not get through today, and ask questions over Piazza or in office hours.",source:"@site/docs\\exercises\\ex16.md",slug:"/exercises/ex16",permalink:"/cs220-f22/docs/exercises/ex16",version:"current"},l=[{value:"Intro",id:"intro",children:[]},{value:"Part 1",id:"part-1",children:[]},{value:"Part 2",id:"part-2",children:[]},{value:"Part 3",id:"part-3",children:[]}],d={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,r);return Object(o.b)("wrapper",Object(i.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and submit on Gradescope to check your solution. You are encouraged to work at home to complete what you do not get through today, and ask questions over Piazza or in office hours."))),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Reinforces concepts learned in today's meeting:"),Object(o.b)("ul",{parentName:"div"},Object(o.b)("li",{parentName:"ul"},"Linked lists"),Object(o.b)("li",{parentName:"ul"},"Dynamic memory allocation"),Object(o.b)("li",{parentName:"ul"},"Pointers, pointers, and more pointers"),Object(o.b)("li",{parentName:"ul"},"Implement ",Object(o.b)("inlineCode",{parentName:"li"},"length"),", ",Object(o.b)("inlineCode",{parentName:"li"},"add_after"),", and ",Object(o.b)("inlineCode",{parentName:"li"},"reverse_print")," functions")))),Object(o.b)("h3",{id:"intro"},"Intro"),Object(o.b)("p",null,"In this exercise you'll be adding to some starter code to build functions for working with a singly linked list of character data. Get started by running ",Object(o.b)("inlineCode",{parentName:"p"},"git pull")," to update your clone of the public repository, and then copying the ",Object(o.b)("inlineCode",{parentName:"p"},"exercises/ex16")," directory into your personal git repository. You'll see that we have provided a ",Object(o.b)("inlineCode",{parentName:"p"},"Makefile")," for convenience, a ",Object(o.b)("inlineCode",{parentName:"p"},"main.c")," test program, and both a header file and implementation file for the linked list functions."),Object(o.b)("h3",{id:"part-1"},"Part 1"),Object(o.b)("p",null,"Implement a ",Object(o.b)("inlineCode",{parentName:"p"},"length")," function to count and return the number of elements in the singly linked list. Add an appropriate declaration and definition in ",Object(o.b)("inlineCode",{parentName:"p"},"list.h")," and ",Object(o.b)("inlineCode",{parentName:"p"},"list.c"),", respectively.  The function should be passed a pointer to the first node of a linked list (",Object(o.b)("inlineCode",{parentName:"p"},"const")," protected), and return an integer indicating how many values are stored in the linked list.  (Equivalently, it returns a count of the number of nodes in the linked list, since each node stores one element.)"),Object(o.b)("p",null,"Uncomment the assertion in ",Object(o.b)("inlineCode",{parentName:"p"},"main.c")," which tests ",Object(o.b)("inlineCode",{parentName:"p"},"length")," on the test linked list. Compile and test your solution, making any necessary fixes before proceeding. Remember to use ",Object(o.b)("inlineCode",{parentName:"p"},"gdb")," throughout this exercise to debug any segmentation faults."),Object(o.b)("h3",{id:"part-2"},"Part 2"),Object(o.b)("p",null,"Implement the ",Object(o.b)("inlineCode",{parentName:"p"},"add_after")," function.  This should take a pointer to a ",Object(o.b)("inlineCode",{parentName:"p"},"Node")," and a ",Object(o.b)("inlineCode",{parentName:"p"},"char")," value as parameters, and insert a new node with the corresponding ",Object(o.b)("inlineCode",{parentName:"p"},"char")," value into the list, immediately after the node passed as the parameter."),Object(o.b)("p",null,"Uncomment the assertions and call to print in ",Object(o.b)("inlineCode",{parentName:"p"},"main.c")," to test ",Object(o.b)("inlineCode",{parentName:"p"},"add_after")," on the test linked list."),Object(o.b)("h3",{id:"part-3"},"Part 3"),Object(o.b)("p",null,"Implement the ",Object(o.b)("inlineCode",{parentName:"p"},"reverse_print")," function.  It is like the ",Object(o.b)("inlineCode",{parentName:"p"},"print")," function, except that it prints the values in reverse order.  This one will require some thought (hint: recursion)!"),Object(o.b)("p",null,"Uncomment the call to ",Object(o.b)("inlineCode",{parentName:"p"},"reverse_print")," in ",Object(o.b)("inlineCode",{parentName:"p"},"main.c")," to test your implementation."),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Remember to add and commit to your local repo copy as your work. Push to your remote repo when finished. Also scp and submit to Gradescope to check your solution. Use ",Object(o.b)("inlineCode",{parentName:"p"},"exit")," to logout from your ugrad account when finished. If you continue to work on the program after class, make sure to keep your repo updated as well!"))))}p.isMDXComponent=!0}}]);