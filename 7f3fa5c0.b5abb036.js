(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{103:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(153);t.default=function(){return l.a.createElement(r.a,{title:"Syllabus"},l.a.createElement("div",{className:"container"},l.a.createElement("h2",{style:{marginTop:"2%"}},"Syllabus"),l.a.createElement("h4",null,"Computer Science EN.601.220"),l.a.createElement("h4",null,"Intermediate Programming"),l.a.createElement("h4",null,"Fall 2022 (4 credits, E, in person)"),l.a.createElement("br",null),l.a.createElement("p",null,l.a.createElement("em",null,"(The instructors reserve the right to make adjustments to this syllabus as deemed necessary with notice.)")),l.a.createElement("br",null),l.a.createElement("h3",null,"Course Description"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("p",null,"This course teaches intermediate to advanced programming, using C and C++. (Prior knowledge of these languages is not expected, but prior programming experience and a general understanding of basic object-oriented programming are expected.) We will cover low-level programming techniques, as well as object-oriented class design, and the use of class libraries. Specific topics include pointers, dynamic memory allocation, polymorphism, overloading, inheritance, templates, collections, exceptions, and others as time permits. Students are expected to learn the syntax and some language-specific features independently. Course work involves significant programming projects in both languages.")),l.a.createElement("li",null,l.a.createElement("strong",null,"Prerequisites"),l.a.createElement("br",null),l.a.createElement("p",null,"Gateway Computing (AP CS, EN.500.112/113/114/132/133/134, or equivalent)",l.a.createElement("br",null),"Students are expected to be able to create and run simple programs and object-oriented solutions in a general-purpose programming language (such as Java or Python) prior to enrolling in this course.")),l.a.createElement("li",null,l.a.createElement("strong",null,"Required, Elective or Selective Elective"),l.a.createElement("br",null),"EN.500.112/113/114 (Gateway Computing) and/or ",l.a.createElement("br",null),"EN.600.226/EN.601.226 (Data Structures) and/or ",l.a.createElement("br",null),"EN.500.132/133/134 (Bootcamp) and/or",l.a.createElement("br",null),"equivalent")),l.a.createElement("h3",null,"Instructors"),l.a.createElement("p",null,"Patricio Simari",l.a.createElement("br",null),l.a.createElement("a",{href:"pdsimari@jhu.edu",target:"_blank"},"pdsimari@jhu.edu"),",",l.a.createElement("br",null),l.a.createElement("a",{href:"https://www.cs.jhu.edu/~psimari",target:"_blank"},"https://www.cs.jhu.edu/~psimari"),",",l.a.createElement("br",null),"Office hours: TBA",l.a.createElement("br",null)),l.a.createElement("p",null,"Ali Darvish",l.a.createElement("br",null),l.a.createElement("a",{href:"darvish@jhu.edu",target:"_blank"},"darvish@jhu.edu"),",",l.a.createElement("br",null),l.a.createElement("a",{href:"https://www.cs.jhu.edu/~darvish",target:"_blank"},"https://www.cs.jhu.edu/~darvish"),",",l.a.createElement("br",null),"Office hours: TBA"),l.a.createElement("h3",null,"Meetings"),l.a.createElement("p",null,"Mondays, Wednesdays and Fridays:"),l.a.createElement("p",null,"Section 01: 10am-11:15am, Maryland 310 (Simari) ",l.a.createElement("br",null),"Section 02: 12pm-1:15pm, Maryland 310 (Darvish)",l.a.createElement("br",null),"Section 03: 1:30pm-2:45pm, Maryland 310 (Darvish)",l.a.createElement("br",null),"Section 04: 3pm-4:15pm, Shaffer 301 (Simari)",l.a.createElement("br",null)),l.a.createElement("h3",null,"Course Assistants"),l.a.createElement("p",null,"See the course website ",l.a.createElement("a",{href:"https://jhu-ip.github.io/cs220-f22/staff/"}," staff page"),"."),l.a.createElement("h3",null,"Textbooks"),l.a.createElement("ul",null,l.a.createElement("li",null,"Recommended: Brian W. Kernighan & Dennis M. Ritchie, The C Programming Language, Prentice Hall, Inc., 2nd edition, 1988."),l.a.createElement("li",null,"Recommended: Andrew Koenig & Barbara E. Moo, Accelerated C++, Addison-Wesley, 2000."),l.a.createElement("li",null,"For a more detail-oriented presentation of C++, we recommend Deitel & Deitel, C++ How to Program; an electronic edition is available through MSEL: ",l.a.createElement("a",{href:"http://proxy.library.jhu.edu/login?qurl=https://go.oreilly.com/johns-hopkins-university/library/view/-/9780134448930",target:"_blank"},"Link"),"."),l.a.createElement("li",null,"Additionally, you will be expected to read various materials posted on the course website.")),l.a.createElement("h3",null,"Online Resources"),l.a.createElement("p",null,"The following sites will be used heavily during the course:"),l.a.createElement("ul",null,l.a.createElement("li",null,"The course website is ",l.a.createElement("a",{href:"https://jhu-ip.github.io/cs220-f22/",target:"_blank"},"jhu-ip.github.io/cs220-f22/"),"."),l.a.createElement("li",null,"Piazza ",l.a.createElement("a",{href:"https://piazza.com/jhu/fall2022/en601220",target:"_blank"},"piazza.com/jhu/fall2022/en601220")," will serve as our primary communication channel. You should sign up for Piazza immediately."),l.a.createElement("li",null,"Gradescope ",l.a.createElement("a",{href:"https://www.gradescope.com/",target:"_blank"},"https://www.gradescope.com/")," will be used for assignment submission, grades and feedback; you will receive an email invitation to this course on Gradescope."),l.a.createElement("li",null,l.a.createElement("a",{target:"_blank",href:"https://en.cppreference.com"},"en.cppreference.com")," and ",l.a.createElement("a",{target:"_blank",href:"https://www.cplusplus.com"},"www.cplusplus.com")," provide excellent on-line language reference material.")),l.a.createElement("h3",null,"Course Objectives"),l.a.createElement("p",null,"Upon successful completion of this course, you should be able to:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Read, write, trace, test, and debug C and C++ program codes."),l.a.createElement("li",null,"Use command-line Unix/Linux tools for file management, creating and debugging programs in C/C++."),l.a.createElement("li",null,"Analyze a programming specification, design a program that fulfills the specification, create a development plan, execute the plan, implement and deliver the program on time."),l.a.createElement("li",null,"Utilize a distributed version control system to manage the development of a program."),l.a.createElement("li",null,"Understand the importance of good programming practices such as modularity, testing, documentation, and incremental design.")),l.a.createElement("p",null,"This course will address the following ABET Outcomes:"),l.a.createElement("ul",null,l.a.createElement("li",null,"(SO1) Analyze a complex computing problem and apply principles of computing and other relevant disciplines to identify solutions."),l.a.createElement("li",null,"(SO2) Design, implement, and evaluate a computing-based solution to meet a given set of computing requirements in the context of the program\u2019s discipline. in computing practice based on legal and ethical principles."),l.a.createElement("li",null,"(SO5) Function effectively as a member or leader of a team engaged in activities appropriate to the program\u2019s discipline."),l.a.createElement("li",null,"(SO6) Apply computer science theory and software development fundamentals to produce computing-based solutions.")),l.a.createElement("h3",null,"Course Topics"),l.a.createElement("ul",null,l.a.createElement("li",null,"General skills: code reading, tracing, and writing; pair programming and collaborative development; problem analysis and decomposition; incremental design; modular design; automatic testing"),l.a.createElement("li",null,"Unix-like systems and tools: Unix basics, shell basics (command line tools, I/O redirection, etc.), text editors, gcc, make, gdb, valgrind, version control (git)"),l.a.createElement("li",null,"C language, syntax, semantics, and concepts: types, operators, control structures, standard (terminal) I/O, scope, arrays, strings, pointers, dynamic memory allocation, structs, file I/O"),l.a.createElement("li",null,"C++ language, syntax, semantics, and concepts: Standard Template Library (STL), containers (vs arrays), classes, templates, memory management, operator overloading, inheritance and polymorphism, object oriented design, exception handling")),l.a.createElement("h3",null,"General Course Philosophy"),l.a.createElement("p",null,"This course will focus more on learning than on assessment. While we will use grades to let you know how you are doing, we hope that your goal is learning the material, rather than \u201cgetting a good grade.\u201d In the end, the best way to get a good grade is to develop an interest in learning and engage with the material in a self-directed fashion. Besides, in the long run, the knowledge and skills you acquire are far more important than the grade is."),l.a.createElement("p",null,"That said, be aware that the main difficulty many students have with this course is ",l.a.createElement("strong",null,"time management"),". It will be a lot of work, and if you don\u2019t budget your time well, you may find yourself with a grade that does not reflect how well you understand the material. Additionally, while there are lots of resources provided to help you succeed, we cannot force you to use them; it is important to avail yourself of these resources, particularly office hours."),l.a.createElement("h3",null,"Course Approach"),l.a.createElement("p",null,"We take a flipped-classroom approach to the course, with an emphasis on active learning during class sessions. Part of your homework will be to prepare for class by watching video lessons. During class sessions you will extend your learning by working with your instructors and classmates to discuss new concepts and apply them to in-class exercises, rather than listening to a lecture."),l.a.createElement("h3",null,"Expectations & Grading"),l.a.createElement("p",null,"All students are generally expected to actively participate in the scheduled sessions of this course by answering and asking questions and solving the learning exercises. You are also expected to learn via the posted material, assignments, and projects. Our class time will include a recap of the new material, discussion on the important concepts, review of previous exercises, and live coding exercises. Before each session, students are expected to go through the related material posted on the course website and/or Piazza, and finish the coding exercises from the prior session."),l.a.createElement("p",null,"Students will be expected to complete a variety of computer programming assignments, as well as written homework assignments. Some assignments may be done in pairs or groups as specified; others must be completed alone. See the specific assignment page for details of what is permitted for a particular assignment. Failure to follow these guidelines will be a violation of the academic ethics code, and reported and penalized accordingly."),l.a.createElement("p",null,"While code reuse is an important feature of modern programming, for this course, you will be expected to write most of the code for your homework assignments from scratch. You may use language libraries (according to assignment specifications), and you may always reuse your own code from prior work in the course. Downloading full or partial solutions from the internet, however, is an ethics violation. Using code from class examples, slides, or the textbook is acceptable, but you must cite the source properly in a comment in your code describing the original source."),l.a.createElement("p",null,"There will be one midterm exam and a final exam. The midterm exam will cover the topics of the first half of the class (C material) and the final exam will focus on the second half (C++ material). The exams are designed to assess your knowledge of programming in C and C++ as well as your problem solving ability, but not your knowledge of specific tools or technologies discussed in class."),l.a.createElement("p",null,"Homework assignments are expected to take a considerable amount of time; start early and budget your time well. On average, it may take 5-15 hours per week, depending on the assignment and your approach. Additionally, try to use incremental development so that even if you run out of time, you can still turn in code that implements some of the desired functionality (with a README file and comments explaining what\u2019s missing). Keep in mind that half the features working all the way will get you a lot more partial credit than all the features half-way working. Good use of the version control system will significantly help with your incremental development. For each commit, you should update your README file to outline what\u2019s missing and what\u2019s done, and try to keep each commit a submittable version. This is a good practice, and can come in very handy in case you accidentally delete the local copy of your homework!"),l.a.createElement("p",null,"Students are expected to learn material outside of class time and homework, as well. We will generally provide links to tutorials, references, and other resources for each topic. Students are expected to read these, as well as seek out other resources on their own to further their understanding of topics. There is a wealth of programming information on the internet; if one explanation doesn\u2019t make sense, you can probably find another that does."),l.a.createElement("h3",null,"Homework policy"),l.a.createElement("p",null,"Assignments will be due by 11:00 pm on the due date (unless otherwise indicated on the course Piazza site). Non-compiling code will earn a score of zero, so students are strongly encouraged to double-check that all submitted code fully compiles with no errors or warnings in the standard course compilation environment. We will accommodate late submissions in several specific ways:"),l.a.createElement("ul",null,l.a.createElement("li",null,"There will be a 30-minute grace period after the deadline during which assignments can still be submitted, but will receive a penalty of a deduction of 10% of the points possible on the assignment."),l.a.createElement("li",null,"Each student will be permitted to use up to 4 \u201clate days\u201d total during the semester on the individual coding assignments only. However, at most 2 late days may be used on any one assignment."),l.a.createElement("li",null,"Each delay of up to 24 hours past the 11:00 pm deadline for an individual coding assignment counts as one late day."),l.a.createElement("li",null,"No late days are allowed for handwritten homework or partner-based coding projects."),l.a.createElement("li",null,"Students may not use a grace period with a late day. For example, if Student A turns in her homework at 11:45 pm on the day it is due (only 45 minutes past the original deadline), then she will be using one late day. Furthermore, if Student B turns in his homework at 11:15 pm on the day after it is due, he\u2019ll be using two late days.")),l.a.createElement("p",null,"Given these policies, please plan to get your homework done and turned in early so that if you encounter any last-minute delays, it will not hurt you too badly. Additionally, Gradescope will allow multiple submission attempts; we will simply grade the last one. So it\u2019s a good idea to develop your program incrementally, and turn in a fully-compiling (if only partially complete) version every day or so."),l.a.createElement("p",null,"Deadline exceptions can only be made by an instructor (not TAs/CAs), and will only be considered in the circumstances outside the control of the student (e.g., serious illness, death of a relative, etc.). If you must request an exception, do so as early as possible; it is easier to get an exception if you ask before an assignment is due, rather than after. No exceptions will be given for failure to plan ahead or simply having \u201ctoo much work.\u201d"),l.a.createElement("h3",null,"In-class Exercises"),l.a.createElement("p",null,"Many of the course topics will be supported by an exercise. Although these exercises do not count towards your course grade, they are a very important part of your learning, and as such we strongly recommend that you complete them fully. We will review the solutions to these exercises either fully or just the important parts in class sessions. In general, we will not post solutions to the in-class exercises \u2014 if you are having trouble completing an exercise, seek help office hours, or on Piazza. We will have an option for you to submit your solutions on gradescope and get autograder feedback on them."),l.a.createElement("h3",null,"Grading Breakdown"),l.a.createElement("ul",null,l.a.createElement("li",null,"6% - handwritten homework (3 total; due dates vary, will be listed on Piazza)"),l.a.createElement("br",null),l.a.createElement("li",null,"30% - individual coding homework (4.5 total; due dates vary, will be listed on Piazza)"),l.a.createElement("br",null),l.a.createElement("li",null,"14% - midterm coding project (in teams)"),l.a.createElement("br",null),l.a.createElement("li",null,"17% - midterm exam (in class, date TBD)"),l.a.createElement("br",null),l.a.createElement("li",null,"16% - final coding project (in teams)"),l.a.createElement("br",null),l.a.createElement("li",null,"17% - final exam (date to be scheduled by the Registrar)")),l.a.createElement("p",null,"All scores and grader commentary on your homework and project submissions, as well as exams, will be available via Gradescope. Please keep your own record of your grades so that you will know your standing in the course. At the end of the term, letter grades are generally assigned according to the following scale. You should not expect a curve in this course."),l.a.createElement("h3",null,"Interval Letter grade"),l.a.createElement("p",null,"[97,100] \xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"A+")," ",l.a.createElement("br",null),"[93,97) \xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"A"),l.a.createElement("br",null),"[90,93) \xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"A-"),l.a.createElement("br",null),"[87, 90) \xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"B+"),l.a.createElement("br",null),"[83,87) \xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"B"),l.a.createElement("br",null),"[80,83)\xa0\xa0\xa0\xa0\xa0\xa0 ",l.a.createElement("strong",null,"B-"),l.a.createElement("br",null),"[77, 80)\xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"C+"),l.a.createElement("br",null),"[73,77) \xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"C"),l.a.createElement("br",null),"[70,73)\xa0\xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"C-"),l.a.createElement("br",null),"[67, 70) \xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"D+"),l.a.createElement("br",null),"[60,67)\xa0\xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"D"),l.a.createElement("br",null),"[0,60) \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0",l.a.createElement("strong",null,"F"),l.a.createElement("br",null)),l.a.createElement("h3",null,"Classroom Climate"),l.a.createElement("p",null,"As your instructors, we are committed to creating a classroom environment that values the diversity of experiences and perspectives that all students bring. Everyone here has the right to be treated with dignity and respect. We believe that fostering an inclusive climate is important because research and my experience show that students who interact with peers who are different from themselves learn new things and experience tangible educational outcomes. Please join us in creating a welcoming and vibrant classroom climate. Note that you should expect to be challenged intellectually by instructors, the course assistants (CAs), and your peers, and at times this may feel uncomfortable. Indeed, it can be helpful to be pushed sometimes in order to learn and grow. But at no time in this learning process should someone be singled out or treated unequally on the basis of any seen or unseen part of their identity."),l.a.createElement("p",null,"If you ever have concerns in this course about harassment, discrimination, or any unequal treatment, or you have any general concerns about the classroom environment, we invite you to share directly with the instructor or CAs. We promise that we will take your communication seriously and to seek mutually acceptable resolutions and accommodations. Reporting will never impact your course grade. You may also share concerns with the Department Head (Randal Burns, ",l.a.createElement("a",{href:"randal@cs.jhu.edu"},"randal@cs.jhu.edu"),"), the Director of Undergraduate Studies (Joanne Selinski, ",l.a.createElement("a",{href:"joanne@cs.jhu.edu"},"joanne@cs.jhu.edu"),"), the Assistant Dean for Diversity and Inclusion (Darlene Saporu, ",l.a.createElement("a",{href:"dsaporu1@jhu.edu"},"dsaporu1@jhu.edu"),"), the Office of Institutional Equity (",l.a.createElement("a",{href:"oie@jhu.edu"},"oie@jhu.edu"),"), or the CS Department Diversity and Inclusion Committee (",l.a.createElement("a",{href:"diversityandinclusion@cs.jhu.edu"},"diversityandinclusion@cs.jhu.edu"),"). In handling reports, people will protect your privacy as much as possible, but faculty and staff are required to officially report information for some cases (e.g. sexual harassment)."),l.a.createElement("p",null,"We hope that all students will be able to actively participate in all course meetings. Out of respect for your fellow students, be sure to attend on time each day. If you miss a classroom meeting for whatever reason, you are responsible for the material presented. Also, when attending zoom office hours please use your full name in your zoom account settings, and add your picture to your Zoom profile."),l.a.createElement("h3",null,"Personal Wellbeing"),l.a.createElement("p",null,l.a.createElement("ul",null,l.a.createElement("li",null,"If you are sick, please notify us by email so that we can make appropriate accommodations should this affect your ability to attend class, complete assignments, or participate in assessments. The ",l.a.createElement("a",{href:"https://studentaffairs.jhu.edu/student-health/",target:"_blank"},"Student Health and Wellness Center")," is open and operational for primary care needs. If you would like to speak with a medical provider, please call 410-516-8270, and staff will determine an appropriate course of action based on your geographic location, presenting symptoms, and insurance needs. Telemedicine visits are available only to people currently in Maryland. See also ",l.a.createElement("a",{href:"https://studentaffairs.jhu.edu/student-life/student-outreach-support/absences-from-class/illness-note-policy/",target:"_blank"},"https://studentaffairs.jhu.edu/student-life/student-outreach-support/absences-from-class/illness-note-policy/")),l.a.createElement("li",null,"The Johns Hopkins COVID-19 Call Center (JHCCC), which can be reached at 833-546-7546 seven days a week from 7 a.m. to 7 p.m., supports all JHU students, faculty, and staff experiencing COVID-19 symptoms. Primarily intended for those currently within driving distance of Baltimore, the JHCCC will evaluate your symptoms, order testing if needed, and conduct contact investigation for those affiliates who test positive. More information on the JHCCC and testing is on the ",l.a.createElement("a",{href:"https://covidinfo.jhu.edu/health-safety/johns-hopkins-covid-19-call-center/",target:"_blank"},"coronavirus information website"),"."),l.a.createElement("li",null,"All students with disabilities who require accommodations for this course should contact us at their earliest convenience to discuss their specific needs. If you have a documented disability, you must be registered with the JHU Office for Student Disability Services (Shaffer 101; 410-516-4720; ",l.a.createElement("a",{href:"http://web.jhu.edu/disabilities/"},"http://web.jhu.edu/disabilities/"),") to receive accommodations."),l.a.createElement("li",null,"Students who are struggling with anxiety, stress, depression or other mental health related concerns, please consider connecting with resources through the JHU Counseling Center. The Counseling Center will be providing services remotely to protect the health of students, staff, and communities. Please reach out to get connected and learn about service options based on where you are living this fall at 410-516-8278 and online at ",l.a.createElement("a",{href:"http://studentaffairs.jhu.edu/counselingcenter/"},"http://studentaffairs.jhu.edu/counselingcenter/"),"."),l.a.createElement("li",null,"Student Outreach & Support will be fully operational (virtually) to help support students. Students can self-refer or refer a friend who may need extra support or help getting connected to resources. To connect with SOS, please email ",l.a.createElement("a",{href:"deanofstudents@jhu.edu"},"deanofstudents@jhu.edu"),", call 410-516-7857, or students can schedule to meet with a Case Manager by visiting the Student Outreach & Support website and follow \u201cSchedule an Appointment\u201d."))),l.a.createElement("h3",null,"Family Accommodations Policy"),l.a.createElement("p",null,"You are welcome to bring a family member to class on occasional days when your responsibilities require it (for example, if emergency childcare is unavailable, or for health needs of a relative). In fact, you may see children in class on days when their school is closed. Please be sensitive to the classroom environment, and if your family member becomes uncomfortably disruptive, you may leave the classroom and return as needed."),l.a.createElement("h3",null,"University Policy on Incompletes"),l.a.createElement("p",null,"Students who are confronted with extraordinary circumstances that interfere with their ability perform their academic work may request an incomplete grade from the instructor. While approval of such a request is not automatic, it is expected that faculty will make every effort to accommodate students dealing with illness in the family and other pandemic-related hardships. The instructor and student must establish a timetable for submitting the unfinished work with a final deadline no later than the end of the third week of the Fall 2022 semester. Exceptions to this deadline require a petition from the instructor to the student\u2019s academic advising office before that date. When entering an Incomplete grade in SIS, faculty must include a reversion grade which represents the grade the student will receive if s/he does not complete the missing work by the agreed-upon deadline."),l.a.createElement("p",null,"For more information on these and other academic policies, see ",l.a.createElement("a",{href:"https://e-catalogue.jhu.edu/engineering/full-time-residential-programs/undergraduate-policies/academic-policies/grading-policies/"},"https://e-catalogue.jhu.edu/engineering/full-time-residential-programs/undergraduate-policies/academic-policies/grading-policies/")),l.a.createElement("h3",null,"The Office of Academic Support at JHU"),l.a.createElement("p",null,"All programs are free to students. Please see below for specifics:"),l.a.createElement("ul",null,l.a.createElement("li",null,"PILOT Learning\u2014Peer-Led Team Learning"),l.a.createElement("ul",null,l.a.createElement("li",null,"Students are organized into small study teams who meet weekly to collaborate on faculty-developed problems-sets. Students work together as a team to solve problems."),l.a.createElement("li",null,"A trained student leader acts as captain and facilitates the weekly meetings using various strategies to foster a collaborative learning environment."),l.a.createElement("li",null,"Registration opens on August 30th at 9pm EST; registration will remain open throughout the semester if space allows."),l.a.createElement("li",null,"Contact: Ariane Kelly ",l.a.createElement("a",{href:"ariane.kelly@jhu.edu"},"ariane.kelly@jhu.edu")),l.a.createElement("li",null,"Instagram: @jhupilot")),l.a.createElement("br",null),l.a.createElement("li",null,"Learning Den Tutoring Program - Small Group Tutoring"),l.a.createElement("ul",null,l.a.createElement("li",null,"Small group, tailored tutoring of 4 students or less which is headed by one tutor. Visit the website (above) to access zoom links for drop-in sessions"),l.a.createElement("li",null,"Tutors can assist with but are not limited to:"),l.a.createElement("li",null,"Review and strengthening of subject-specific material knowledge"),l.a.createElement("li",null,"Assist with homework-like problems"),l.a.createElement("li",null,"Course-specific study skills and exam preparation"),l.a.createElement("li",null,"Contact: Kaitlin Quigley ",l.a.createElement("a",{href:"quigley@jhu.edu"},"quigley@jhu.edu")),l.a.createElement("li",null,"Instagram: @jhulearningden")),l.a.createElement("br",null),l.a.createElement("li",null,"The Study Consulting Program"),l.a.createElement("ul",null,l.a.createElement("li",null,"Students work one-on-one with a study consultant to set academic goals and develop customized strategies for success. Areas addressed include but are not limited to:"),l.a.createElement("ul",null,l.a.createElement("li",null,"  Time management"),l.a.createElement("li",null,"Note taking and test preparation"),l.a.createElement("li",null,"Mastering large amounts of information")),l.a.createElement("li",null,"Contact: Dr. Sharleen Argamaso ",l.a.createElement("a",{href:"sharleen.argamaso@jhu.edu"},"sharleen.argamaso@jhu.edu")),l.a.createElement("li",null,"Instagram: @jhustudyconsulting")),l.a.createElement("br",null),l.a.createElement("li",null,"The Writing Center"),l.a.createElement("ul",null,l.a.createElement("li",null,"Undergraduate and graduate students in KSAS/Whiting School of Engineering can schedule 50-min sessions with a Writing Center tutor to look over a draft of written work (up to 10 pages) or a personal statement for graduate study"),l.a.createElement("li",null,"Contact: Robert Tinkle ",l.a.createElement("a",{href:"rtinkle1@jhu.ed"},"rtinkle1@jhu.ed")),l.a.createElement("li",null,"Web Address: ",l.a.createElement("a",{href:"https://krieger.jhu.edu/writingcenter/"},"https://krieger.jhu.edu/writingcenter/")))),l.a.createElement("h3",null,"Ethics"),l.a.createElement("p",null,"The strength of the university depends on academic and personal integrity. In this course, you must be honest and truthful, abiding by the Computer Science Academic Integrity Policy:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Cheating is wrong. Cheating hurts our community by undermining academic integrity, creating mistrust, and fostering unfair competition. The university will punish cheaters with failure on an assignment, failure in a course, permanent transcript notation, suspension, and/or expulsion. Offenses may be reported to medical, law or other professional or graduate schools when a cheater applies."),l.a.createElement("li",null,"Violations can include cheating on exams, plagiarism, reuse of assignments without permission, improper use of the Internet and electronic devices, unauthorized collaboration, alteration of graded assignments, forgery and falsification, lying, facilitating academic dishonesty, and unfair competition. Ignorance of these rules is not an excuse."),l.a.createElement("li",null,"Academic honesty is required in all work you submit to be graded. Except where the instructor specifies group work, you must solve all homework and programming assignments without the help of others. For example, you must not look at anyone else\u2019s solutions (including program code) to your homework problems. However, you may discuss assignment specifications (not solutions) with others to be sure you understand what is required by the assignment."),l.a.createElement("li",null,"If your instructor permits using fragments of source code from outside sources, such as your textbook or on-line resources, you must properly cite the source. Not citing it constitutes plagiarism. Similarly, your group projects must list everyone who participated."),l.a.createElement("li",null,"Falsifying program output or results is prohibited."),l.a.createElement("li",null,"Your instructor is free to override parts of this policy for particular assignments. To protect yourself: (1) Ask the instructor if you are not sure what is permissible. (2) Seek help from the instructor, TA or CAs, as you are always encouraged to do, rather than from other students. (3) Cite any questionable sources of help you may have received."),l.a.createElement("li",null,'On every exam, you will sign the following pledge: "I agree to complete this exam without unauthorized assistance from any person, materials or device. [Signed and dated]". Your course instructors will let you know where to find copies of old exams, if they are available.')),l.a.createElement("p",null,"In addition, the specific ethics guidelines for this course are as follows:"),l.a.createElement("ol",null,l.a.createElement("li",null,'This course is about learning, and encourages collaboration toward that end. In general, if a collaborative act helps you to learn, it is probably permitted. If, on the other hand, it helps you avoid learning, it is not permitted. For example, helping your friend learn how to use the debugger is great. Helping your friend by debugging their code for them is bad, because your friend will never learn how to do it by watching you. A main focus of this course is learning skills, and you can\u2019t acquire skills without practice. Therefore, "helping" other students by allowing them to skip the practice endangers the learning outcomes of the course, and is prohibited. Helping other students practice more efficiently and effectively (e.g. not waste 3 hours trying to fix one bug), on the other hand, actively supports the learning goals of the course, and is not only allowed, but encouraged.'),l.a.createElement("br",null),l.a.createElement("li",null,'In general, when helping another student, never do something for them; instead, try to think like a teacher and "teach" them how to do it themselves. This will help you both learn, since teaching something is a great way of learning more about it as well.'),l.a.createElement("br",null),l.a.createElement("ul",null,l.a.createElement("li",null,"Asking a friend to let you look at their working code is not allowed, nor is offering to let someone else look at your working code."),l.a.createElement("li",null,'In general, when helping others, think "teach, not "do".'),l.a.createElement("li",null,"Always acknowledge in your README file all sources used."),l.a.createElement("li",null,'The two coding projects for this course will allow for and encourage collaboration in teams. There are no limits to communication within a team, but work should be done "as a team" with all members present; don\u2019t just split the assignment into pieces and work on separate parts. No working source code should be shared outside your team.'))),l.a.createElement("p",null,"Report any violations you witness to the instructor."),l.a.createElement("p",null,"You can find more information about university misconduct policies on the web at these sites:"),l.a.createElement("ul",null,l.a.createElement("li",null,"For undergraduates: ",l.a.createElement("a",{href:"https://studentaffairs.jhu.edu/policies-guidelines/undergrad-ethics/"},"https://studentaffairs.jhu.edu/policies-guidelines/undergrad-ethics/")),l.a.createElement("li",null,"For graduate students:",l.a.createElement("a",{href:"http://e-catalog.jhu.edu/grad-students/graduate-specific-policies/"},"http://e-catalog.jhu.edu/grad-students/graduate-specific-policies/")))))}}}]);